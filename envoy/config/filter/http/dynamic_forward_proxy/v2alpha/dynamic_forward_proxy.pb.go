// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/dynamic_forward_proxy/v2alpha/dynamic_forward_proxy.proto

package v2alpha

import (
	fmt "fmt"
	v2alpha "github.com/envoyproxy/go-control-plane/envoy/config/common/dynamic_forward_proxy/v2alpha"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Configuration for the dynamic forward proxy HTTP filter. See the :ref:`architecture overview
// <arch_overview_http_dynamic_forward_proxy>` for more information.
type FilterConfig struct {
	// The DNS cache configuration that the filter will attach to. Note this configuration must
	// match that of associated :ref:`dynamic forward proxy cluster configuration
	// <envoy_api_field_config.cluster.dynamic_forward_proxy.v2alpha.ClusterConfig.dns_cache_config>`.
	DnsCacheConfig       *v2alpha.DnsCacheConfig `protobuf:"bytes,1,opt,name=dns_cache_config,json=dnsCacheConfig,proto3" json:"dns_cache_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FilterConfig) Reset()         { *m = FilterConfig{} }
func (m *FilterConfig) String() string { return proto.CompactTextString(m) }
func (*FilterConfig) ProtoMessage()    {}
func (*FilterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_85a2356b260c47da, []int{0}
}

func (m *FilterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterConfig.Unmarshal(m, b)
}
func (m *FilterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterConfig.Marshal(b, m, deterministic)
}
func (m *FilterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterConfig.Merge(m, src)
}
func (m *FilterConfig) XXX_Size() int {
	return xxx_messageInfo_FilterConfig.Size(m)
}
func (m *FilterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FilterConfig proto.InternalMessageInfo

func (m *FilterConfig) GetDnsCacheConfig() *v2alpha.DnsCacheConfig {
	if m != nil {
		return m.DnsCacheConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*FilterConfig)(nil), "envoy.config.filter.http.dynamic_forward_proxy.v2alpha.FilterConfig")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/dynamic_forward_proxy/v2alpha/dynamic_forward_proxy.proto", fileDescriptor_85a2356b260c47da)
}

var fileDescriptor_85a2356b260c47da = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x0a, 0x4a, 0xcd, 0x2b, 0xcb,
	0xaf, 0xd4, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x4f, 0xcb, 0xcc, 0x29, 0x49, 0x2d, 0xd2,
	0xcf, 0x28, 0x29, 0x29, 0xd0, 0x4f, 0xa9, 0xcc, 0x4b, 0xcc, 0xcd, 0x4c, 0x8e, 0x4f, 0xcb, 0x2f,
	0x2a, 0x4f, 0x2c, 0x4a, 0x89, 0x2f, 0x28, 0xca, 0xaf, 0xa8, 0xd4, 0x2f, 0x33, 0x4a, 0xcc, 0x29,
	0xc8, 0x48, 0xc4, 0x2e, 0xab, 0x57, 0x50, 0x94, 0x5f, 0x92, 0x2f, 0x64, 0x06, 0x36, 0x53, 0x0f,
	0x62, 0xa6, 0x1e, 0xc4, 0x4c, 0x3d, 0x90, 0x99, 0x7a, 0xd8, 0x75, 0x41, 0xcd, 0x94, 0x72, 0x44,
	0x71, 0x4b, 0x72, 0x7e, 0x6e, 0x6e, 0x7e, 0x1e, 0x21, 0x67, 0xe4, 0x15, 0xc7, 0x27, 0x27, 0x26,
	0x67, 0xa4, 0x42, 0xac, 0x96, 0x12, 0x2f, 0x4b, 0xcc, 0xc9, 0x4c, 0x49, 0x2c, 0x49, 0xd5, 0x87,
	0x31, 0x20, 0x12, 0x4a, 0xed, 0x8c, 0x5c, 0x3c, 0x6e, 0x60, 0x97, 0x38, 0x83, 0x8d, 0x17, 0x2a,
	0xe7, 0x12, 0x80, 0x6b, 0x8e, 0x87, 0x58, 0x29, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0xe4, 0xa8,
	0x87, 0xe2, 0x7e, 0x88, 0x3b, 0xf0, 0x3b, 0x5d, 0xcf, 0x25, 0xaf, 0xd8, 0x19, 0x64, 0x12, 0xc4,
	0x70, 0x27, 0xae, 0x5d, 0x2f, 0x0f, 0x30, 0xb3, 0x76, 0x31, 0x32, 0x09, 0x30, 0x06, 0xf1, 0xa5,
	0xa0, 0xca, 0x65, 0x73, 0xb9, 0x64, 0xe6, 0x43, 0xac, 0x80, 0x98, 0x41, 0x5e, 0x68, 0x39, 0x49,
	0xb8, 0x40, 0xa4, 0xdd, 0x20, 0xb2, 0x01, 0x20, 0xc9, 0x00, 0x90, 0x5f, 0x03, 0x18, 0xa3, 0xd8,
	0xa1, 0x8a, 0x92, 0xd8, 0xc0, 0xbe, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x73, 0x11, 0x76,
	0x94, 0xe7, 0x01, 0x00, 0x00,
}
