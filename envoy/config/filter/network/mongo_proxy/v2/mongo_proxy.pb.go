// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/mongo_proxy/v2/mongo_proxy.proto

package v2

import (
	fmt "fmt"
	v2 "github.com/envoyproxy/go-control-plane/envoy/config/filter/fault/v2"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MongoProxy struct {
	// The human readable prefix to use when emitting :ref:`statistics
	// <config_network_filters_mongo_proxy_stats>`.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// The optional path to use for writing Mongo access logs. If not access log
	// path is specified no access logs will be written. Note that access log is
	// also gated :ref:`runtime <config_network_filters_mongo_proxy_runtime>`.
	AccessLog string `protobuf:"bytes,2,opt,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	// Inject a fixed delay before proxying a Mongo operation. Delays are
	// applied to the following MongoDB operations: Query, Insert, GetMore,
	// and KillCursors. Once an active delay is in progress, all incoming
	// data up until the timer event fires will be a part of the delay.
	Delay *v2.FaultDelay `protobuf:"bytes,3,opt,name=delay,proto3" json:"delay,omitempty"`
	// Flag to specify whether :ref:`dynamic metadata
	// <config_network_filters_mongo_proxy_dynamic_metadata>` should be emitted. Defaults to false.
	EmitDynamicMetadata  bool     `protobuf:"varint,4,opt,name=emit_dynamic_metadata,json=emitDynamicMetadata,proto3" json:"emit_dynamic_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MongoProxy) Reset()         { *m = MongoProxy{} }
func (m *MongoProxy) String() string { return proto.CompactTextString(m) }
func (*MongoProxy) ProtoMessage()    {}
func (*MongoProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d590dd12f767c61, []int{0}
}

func (m *MongoProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MongoProxy.Unmarshal(m, b)
}
func (m *MongoProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MongoProxy.Marshal(b, m, deterministic)
}
func (m *MongoProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MongoProxy.Merge(m, src)
}
func (m *MongoProxy) XXX_Size() int {
	return xxx_messageInfo_MongoProxy.Size(m)
}
func (m *MongoProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_MongoProxy.DiscardUnknown(m)
}

var xxx_messageInfo_MongoProxy proto.InternalMessageInfo

func (m *MongoProxy) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *MongoProxy) GetAccessLog() string {
	if m != nil {
		return m.AccessLog
	}
	return ""
}

func (m *MongoProxy) GetDelay() *v2.FaultDelay {
	if m != nil {
		return m.Delay
	}
	return nil
}

func (m *MongoProxy) GetEmitDynamicMetadata() bool {
	if m != nil {
		return m.EmitDynamicMetadata
	}
	return false
}

func init() {
	proto.RegisterType((*MongoProxy)(nil), "envoy.config.filter.network.mongo_proxy.v2.MongoProxy")
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/mongo_proxy/v2/mongo_proxy.proto", fileDescriptor_4d590dd12f767c61)
}

var fileDescriptor_4d590dd12f767c61 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x31, 0x4b, 0xc4, 0x30,
	0x1c, 0xc5, 0x49, 0xef, 0x14, 0x9b, 0x1b, 0x84, 0x8a, 0x58, 0x0e, 0x84, 0xe2, 0x54, 0x6e, 0x48,
	0x20, 0x2e, 0x0e, 0xe2, 0x50, 0x0e, 0x27, 0x0f, 0x6a, 0x47, 0x97, 0x12, 0xdb, 0xb4, 0x04, 0xdb,
	0xfe, 0x4b, 0x1a, 0xe3, 0xf5, 0xab, 0x39, 0xb9, 0xfb, 0x49, 0xfc, 0x16, 0x92, 0xe6, 0xc4, 0x1b,
	0x6e, 0xb8, 0xed, 0x9f, 0xfc, 0xde, 0x7b, 0xff, 0xe4, 0xe1, 0x7b, 0xd1, 0x19, 0x18, 0x69, 0x01,
	0x5d, 0x25, 0x6b, 0x5a, 0xc9, 0x46, 0x0b, 0x45, 0x3b, 0xa1, 0x3f, 0x40, 0xbd, 0xd1, 0x16, 0xba,
	0x1a, 0xf2, 0x5e, 0xc1, 0x76, 0xa4, 0x86, 0xed, 0x1f, 0x49, 0xaf, 0x40, 0x43, 0xb0, 0x9a, 0xdc,
	0xc4, 0xb9, 0x89, 0x73, 0x93, 0x9d, 0x9b, 0xec, 0xcb, 0x0d, 0x5b, 0xc6, 0x87, 0x36, 0x55, 0xfc,
	0xbd, 0xd1, 0x36, 0x7b, 0x1a, 0x5c, 0xea, 0xf2, 0xca, 0xf0, 0x46, 0x96, 0x5c, 0x0b, 0xfa, 0x37,
	0x38, 0x70, 0xf3, 0x8d, 0x30, 0xde, 0xd8, 0xd4, 0xd4, 0x86, 0x06, 0x2b, 0xbc, 0x18, 0x34, 0xd7,
	0x79, 0xaf, 0x44, 0x25, 0xb7, 0x21, 0x8a, 0x50, 0xec, 0x27, 0xfe, 0xe7, 0xcf, 0xd7, 0x6c, 0xae,
	0xbc, 0x08, 0x65, 0xd8, 0xd2, 0x74, 0x82, 0xc1, 0x35, 0xc6, 0xbc, 0x28, 0xc4, 0x30, 0xe4, 0x0d,
	0xd4, 0xa1, 0x67, 0xa5, 0x99, 0xef, 0x6e, 0x9e, 0xa0, 0x0e, 0x1e, 0xf0, 0x49, 0x29, 0x1a, 0x3e,
	0x86, 0xb3, 0x08, 0xc5, 0x0b, 0x16, 0x93, 0x43, 0x1f, 0x73, 0x6f, 0x34, 0x8c, 0x3c, 0xda, 0x61,
	0x6d, 0xf5, 0x99, 0xb3, 0x05, 0x0c, 0x5f, 0x8a, 0x56, 0xea, 0xbc, 0x1c, 0x3b, 0xde, 0xca, 0x22,
	0x6f, 0x85, 0xe6, 0x25, 0xd7, 0x3c, 0x9c, 0x47, 0x28, 0x3e, 0xcb, 0x2e, 0x2c, 0x5c, 0x3b, 0xb6,
	0xd9, 0xa1, 0xe4, 0x19, 0xdf, 0x49, 0x70, 0x8b, 0x5c, 0x49, 0xc7, 0x97, 0x99, 0x9c, 0xff, 0xd7,
	0x90, 0xda, 0x6a, 0x52, 0xf4, 0xe2, 0x19, 0xf6, 0x7a, 0x3a, 0xf5, 0x74, 0xfb, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x8d, 0x06, 0x38, 0xd6, 0x01, 0x00, 0x00,
}
