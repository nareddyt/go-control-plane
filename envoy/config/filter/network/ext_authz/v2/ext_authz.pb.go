// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/ext_authz/v2/ext_authz.proto

package v2

import (
	fmt "fmt"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// External Authorization filter calls out to an external service over the
// gRPC Authorization API defined by
// :ref:`CheckRequest <envoy_api_msg_service.auth.v2.CheckRequest>`.
// A failed check will cause this filter to close the TCP connection.
type ExtAuthz struct {
	// The prefix to use when emitting statistics.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// The external authorization gRPC service configuration.
	// The default timeout is set to 200ms by this filter.
	GrpcService *core.GrpcService `protobuf:"bytes,2,opt,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"`
	// The filter's behaviour in case the external authorization service does
	// not respond back. When it is set to true, Envoy will also allow traffic in case of
	// communication failure between authorization service and the proxy.
	// Defaults to false.
	FailureModeAllow     bool     `protobuf:"varint,3,opt,name=failure_mode_allow,json=failureModeAllow,proto3" json:"failure_mode_allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtAuthz) Reset()         { *m = ExtAuthz{} }
func (m *ExtAuthz) String() string { return proto.CompactTextString(m) }
func (*ExtAuthz) ProtoMessage()    {}
func (*ExtAuthz) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec2615c2696024a, []int{0}
}

func (m *ExtAuthz) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtAuthz.Unmarshal(m, b)
}
func (m *ExtAuthz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtAuthz.Marshal(b, m, deterministic)
}
func (m *ExtAuthz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtAuthz.Merge(m, src)
}
func (m *ExtAuthz) XXX_Size() int {
	return xxx_messageInfo_ExtAuthz.Size(m)
}
func (m *ExtAuthz) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtAuthz.DiscardUnknown(m)
}

var xxx_messageInfo_ExtAuthz proto.InternalMessageInfo

func (m *ExtAuthz) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *ExtAuthz) GetGrpcService() *core.GrpcService {
	if m != nil {
		return m.GrpcService
	}
	return nil
}

func (m *ExtAuthz) GetFailureModeAllow() bool {
	if m != nil {
		return m.FailureModeAllow
	}
	return false
}

func init() {
	proto.RegisterType((*ExtAuthz)(nil), "envoy.config.filter.network.ext_authz.v2.ExtAuthz")
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/ext_authz/v2/ext_authz.proto", fileDescriptor_3ec2615c2696024a)
}

var fileDescriptor_3ec2615c2696024a = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x49, 0x57, 0x64, 0x37, 0x55, 0x90, 0x5e, 0x2c, 0x7b, 0x90, 0x22, 0x1e, 0x8a, 0x48,
	0x02, 0x15, 0xc4, 0x6b, 0x0b, 0xe2, 0x69, 0xa1, 0xd4, 0x9b, 0x97, 0x12, 0xdb, 0x69, 0x0d, 0xd6,
	0x26, 0x64, 0xb3, 0xd9, 0xae, 0x2f, 0xe4, 0x3b, 0x78, 0xf2, 0x75, 0x7c, 0x0b, 0x49, 0xb3, 0x4b,
	0x3d, 0x7a, 0xcb, 0xe4, 0x9f, 0xff, 0x9b, 0xf9, 0x07, 0xdf, 0x43, 0x6f, 0xc4, 0x8e, 0x56, 0xa2,
	0x6f, 0x78, 0x4b, 0x1b, 0xde, 0x69, 0x50, 0xb4, 0x07, 0xbd, 0x15, 0xea, 0x8d, 0xc2, 0xa0, 0x4b,
	0xb6, 0xd1, 0xaf, 0x1f, 0xd4, 0x24, 0x53, 0x41, 0xa4, 0x12, 0x5a, 0x04, 0xf1, 0xe8, 0x24, 0xce,
	0x49, 0x9c, 0x93, 0xec, 0x9d, 0x64, 0x6a, 0x36, 0xc9, 0xf2, 0xca, 0xcd, 0x60, 0x92, 0x5b, 0x4e,
	0x25, 0x14, 0xd0, 0x56, 0xc9, 0xaa, 0x5c, 0x83, 0x32, 0xbc, 0x02, 0xc7, 0x5b, 0x9e, 0x1b, 0xd6,
	0xf1, 0x9a, 0x69, 0xa0, 0x87, 0x87, 0x13, 0x2e, 0x3f, 0x11, 0x9e, 0x3f, 0x0c, 0x3a, 0xb5, 0xb8,
	0xe0, 0x1a, 0xfb, 0x6b, 0xcd, 0x74, 0x29, 0x15, 0x34, 0x7c, 0x08, 0x51, 0x84, 0xe2, 0x45, 0xb6,
	0xf8, 0xfa, 0xf9, 0x9e, 0x1d, 0x29, 0x2f, 0x42, 0x05, 0xb6, 0x6a, 0x3e, 0x8a, 0x41, 0x8a, 0x4f,
	0xfe, 0xce, 0x09, 0xbd, 0x08, 0xc5, 0x7e, 0x72, 0x41, 0xdc, 0xe2, 0x4c, 0x72, 0x62, 0x12, 0x62,
	0xd7, 0x21, 0x8f, 0x4a, 0x56, 0x4f, 0xae, 0xab, 0xf0, 0xdb, 0xa9, 0x08, 0x6e, 0x70, 0xd0, 0x30,
	0xde, 0x6d, 0x14, 0x94, 0xef, 0xa2, 0x86, 0x92, 0x75, 0x9d, 0xd8, 0x86, 0xb3, 0x08, 0xc5, 0xf3,
	0xe2, 0x6c, 0xaf, 0xac, 0x44, 0x0d, 0xa9, 0xfd, 0xcf, 0x56, 0xf8, 0x8e, 0x0b, 0x87, 0x97, 0x4a,
	0x0c, 0x3b, 0xf2, 0xdf, 0x13, 0x65, 0xa7, 0x87, 0x80, 0xb9, 0x8d, 0x9c, 0xa3, 0x67, 0xcf, 0x24,
	0x2f, 0xc7, 0x63, 0xfe, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x57, 0xbb, 0xa5, 0xa4,
	0x01, 0x00, 0x00,
}
